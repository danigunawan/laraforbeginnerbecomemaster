REFF:
===============
Polymorphic relation many to many

1. buat model Video dan migrasinya
php artisan make:model Video -m

2. buat model Taggable dan migrasinya
php artisan make:model Taggable -m


4. buat model Tag dan migrasinya
php artisan make:model Tag -m


3. buka file migrasi 2017_12_30_190524_create_taggables_table.php
tambah pada up : 

    public function up()
    {
        Schema::create('taggables', function (Blueprint $table) {
            $table->integer('tag_id');
            $table->integer('taggable_id');
            $table->integer('taggable_type');
            // $table->timestamps();
        });
    }

4. buka file migrasi 2017_12_30_190421_create_videos_table.php
tambah pada up : 

    public function up()
    {
        Schema::create('tags', function (Blueprint $table) {
            $table->increments('id');
            $table->string('name');
            $table->timestamps();
        });
    }

5. buka file migrasi 2017_12_30_191046_create_tags_table.php
tambah pada up : 

    public function up()
    {
        Schema::create('videos', function (Blueprint $table) {
            $table->increments('id');
            $table->string('name');
            $table->timestamps();
        });
    }

6. buka model Post.php di app/Post.php
tambahkan function :


   public function tags(){
   	return $this->morphToMany('App\Tag', 'taggable');
   }

7. buka model Tag.php di App/Tag.php
tambahkan function :

    public function posts(){
    	return $this->morphedByMany('App\Post', 'taggable');
    }


    public function videos(){
    	return $this->morphedByMany('App\Video', 'taggable');

    }

8. php artisan migrate